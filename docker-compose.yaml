version: '2'

# starts 4 docker containers running minio server instances. Each
# minio server's web interface will be accessible on the host at port
# 9001 through 9004.
services:
 rpms3:
   build: test
   volumes:
     - .:/etc/rpm_s3
   entrypoint: ["tail", "-f", "/dev/null"]
   environment:
     AWS_ACCESS_KEY_ID: minio
     AWS_SECRET_ACCESS_KEY: minio123
     RPMS3_EXTRA_PARAMS: --s3_endpoint_url http://minio1:9000  --s3_signature_version s3v4
     MINIO_ENDPOINT: http://minio1:9000
     PIPBINARY: ${PIPBINARY}
     PYTHONBINARY: ${PYTHONBINARY}

 minio1:
  image: minio/minio:RELEASE.2018-12-13T02-04-19Z
  volumes:
   - data1:/data
  ports:
   - "9001:9000"
  environment:
   MINIO_ACCESS_KEY: minio
   MINIO_SECRET_KEY: minio123
  command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data
 minio2:
  image: minio/minio:RELEASE.2018-12-13T02-04-19Z
  volumes:
   - data2:/data
  ports:
   - "9002:9000"
  environment:
   MINIO_ACCESS_KEY: minio
   MINIO_SECRET_KEY: minio123
  command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data
 minio3:
  image: minio/minio:RELEASE.2018-12-13T02-04-19Z
  volumes:
   - data3:/data
  ports:
   - "9003:9000"
  environment:
   MINIO_ACCESS_KEY: minio
   MINIO_SECRET_KEY: minio123
  command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data
 minio4:
  image: minio/minio:RELEASE.2018-12-13T02-04-19Z
  volumes:
   - data4:/data
  ports:
   - "9004:9000"
  environment:
   MINIO_ACCESS_KEY: minio
   MINIO_SECRET_KEY: minio123
  command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data
 createbuckets:
   image: minio/mc
   depends_on:
     - minio1
     - minio2
     - minio3
     - minio4
   entrypoint: >
     /bin/sh -c "
     /usr/bin/mc config host add myminio http://minio1:9000 minio minio123;
     /usr/bin/mc rm -r --force myminio/pkgr-development-rpm;
     /usr/bin/mc mb myminio/pkgr-development-rpm;
     /usr/bin/mc policy download myminio/pkgr-development-rpm;
     exit 0;
     "


## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1:
  data2:
  data3:
  data4:
